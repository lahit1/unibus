#pragma once

#include <iostream>
#include <unordered_map>
#include <initializer_list>
#include <vector>

#include <unibus/req>
#include <unibus/res>

namespace unibus {

	namespace Radix {

		struct N { // Radix node
			std::vector<char> header;
			void (*worker_func)(Req& req, Res& res);
			std::unordered_map<char, std::shared_ptr<N>> targets;

			void call(std::istream& in, std::ostream& out);
			void use(const std::initializer_list<char>& data, void (*worker_func)(Req& req, Res& res));
		};

	}

}
